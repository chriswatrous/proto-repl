// Generated by CoffeeScript 1.12.7
(function() {
  var ClojureVersion, EditorUtils, NReplConnection, nrepl;

  nrepl = require('jg-nrepl-client');

  ClojureVersion = require('./clojure-version');

  EditorUtils = require('../editor-utils');

  module.exports = NReplConnection = (function() {
    function NReplConnection() {}

    NReplConnection.prototype.startMessageHandling = function(messageHandler) {
      return this.conn.messageStream.on("messageSequence", (function(_this) {
        return function(id, messages) {
          var i, len, msg, results;
          if (!_this.namespaceNotFound(messages)) {
            results = [];
            for (i = 0, len = messages.length; i < len; i++) {
              msg = messages[i];
              if (msg.ns && msg.session === _this.session) {
                _this.currentNs = msg.ns;
              }
              if (msg.session === _this.session) {
                results.push(messageHandler(msg));
              } else if (msg.session === _this.cmdSession && msg.out) {
                results.push(messageHandler(msg));
              } else {
                results.push(void 0);
              }
            }
            return results;
          }
        };
      })(this));
    };

    NReplConnection.prototype.codeMayContainReaderConditional = function(code) {
      return code.includes("#?");
    };

    NReplConnection.prototype.namespaceNotFound = function(messages) {
      var i, len, msg, ref;
      for (i = 0, len = messages.length; i < len; i++) {
        msg = messages[i];
        if (((ref = msg.status) != null ? ref.length : void 0) > 0) {
          if (msg.status[0] === "namespace-not-found") {
            return true;
          }
        }
      }
    };

    return NReplConnection;

  })();

}).call(this);
